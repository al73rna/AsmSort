Microsoft (R) Macro Assembler Version 11.00.50727.1	    01/13/14 15:24:36
insertionsort.asm					     Page 1 - 1


				.386
				.MODEL FLAT
				.STACK 10000
				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD
				INCLUDE io.h
			      C ; IO.H -- header file for I/O macros
			      C ; 32-bit version for flat memory model
			      C ; R. Detmer   last revised 8/2000
			      C .NOLIST     ; turn off listing
			      C .LIST        ; begin listing
			      C 

 00000000			.DATA
 00000000 00000053		array		DWORD	83,21,33,10,90,2
	   00000015
	   00000021
	   0000000A
	   0000005A
	   00000002
				;newarray	DWORD	5 DUP (?)
 00000018  0000000B [		outstring	BYTE	11 DUP (?)
	    00
	   ]
 00000023  0D 0A 00					BYTE	0dh,0ah,0

 00000000			.CODE
 00000000			_main:
 00000000  8D 1D 00000000 R				lea		ebx, array
 00000006  53						push	ebx
 00000007  E8 0000003C					call	insertion
 0000000C  83 C4 04					add		esp, 4
 0000000F  B9 00000000					mov		ecx, 0				; length of array
 00000014  83 F9 06		print:		cmp		ecx, 6
 00000017  73 28					jae		done
 00000019  8B C1					mov		eax,ecx
 0000001B  C1 E0 02					shl		eax,2
							dtoa	outstring, [ebx+eax]
							output	outstring
 0000003E  41						inc		ecx
 0000003F  EB D3					jmp		print
 00000041			done:		invoke	ExitProcess, 0

 00000048			insertion	PROC
 00000048  55						push	ebp
 00000049  8B EC					mov		ebp, esp
 0000004B  50						push	eax
 0000004C  53						push	ebx
 0000004D  51						push	ecx
 0000004E  52						push	edx
 0000004F  56						push	esi
 00000050  9C						pushfd
 00000051  8B 75 08					mov		esi, [ebp+8]
 00000054  BA 00000001					mov		edx, 1
 00000059  83 FA 06		fori:		cmp		edx, 6				; length of array is 6
 0000005C  7D 25					jge		finish
 0000005E  8B CA					mov		ecx, edx
 00000060  49						dec		ecx
 00000061  83 F9 00		forj:		cmp		ecx, 0
 00000064  7C 1A					jl		looper2
 00000066  8B F9					mov		edi, ecx
 00000068  C1 E7 02					shl		edi,2
 0000006B  8B 44 37 04					mov		eax, [esi+edi+4]
 0000006F  8B 1C 37					mov		ebx, [esi+edi]
 00000072  3B C3					cmp		eax, ebx
 00000074  7E 07					jng		looper
 00000076  89 5C 37 04					mov		[esi+edi+4], ebx
 0000007A  89 04 37					mov		[esi+edi], eax
 0000007D  49			looper:		dec		ecx
 0000007E  EB E1					jmp		forj
 00000080  42			looper2:	inc		edx
 00000081  EB D6					jmp		fori
 00000083			finish:		
 00000083  9D						popfd
 00000084  5E						pop		esi
 00000085  5A						pop		edx
 00000086  59						pop		ecx
 00000087  5B						pop		ebx
 00000088  58						pop		eax
 00000089  5D						pop		ebp
 0000008A  C3						ret
 0000008B			insertion	ENDP
				public	_main
				END
Microsoft (R) Macro Assembler Version 11.00.50727.1	    01/13/14 15:24:36
insertionsort.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atoi . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
itoa . . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00002710 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000026 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000008B DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
insertion  . . . . . . . . . . .	P Near	 00000048 _TEXT	Length= 00000043 Public
  fori . . . . . . . . . . . . .	L Near	 00000059 _TEXT	
  forj . . . . . . . . . . . . .	L Near	 00000061 _TEXT	
  looper . . . . . . . . . . . .	L Near	 0000007D _TEXT	
  looper2  . . . . . . . . . . .	L Near	 00000080 _TEXT	
  finish . . . . . . . . . . . .	L Near	 00000083 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_main  . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
array  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atoiproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
done . . . . . . . . . . . . . .	L Near	 00000041 _TEXT	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
inproc . . . . . . . . . . . . .	L Near	 00000000 FLAT	External
itoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
outproc  . . . . . . . . . . . .	L Near	 00000000 FLAT	External
outstring  . . . . . . . . . . .	Byte	 00000018 _DATA	
print  . . . . . . . . . . . . .	L Near	 00000014 _TEXT	

	   0 Warnings
	   0 Errors
